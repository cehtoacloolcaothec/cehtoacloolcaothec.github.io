const imgSrcDir = '../../src/img/pipes/{0}-{1}.svg';

const gridSize = {
    'nm' : 18,
    'sm' : 10,
    'md' : 6,
    'lg' : 4,
    'gt' : 2
};

const connections = {
    'start' : {
        '0'   : [0,  1],
        '90'  : [1,  0],
        '180' : [0, -1],
        '270' : [-1, 0]
    },        
    'end' : {
        '0'   : [0,  1],
        '90'  : [1,  0],
        '180' : [0, -1],
        '270' : [-1, 0]
    },
    'elbow' : {
        '0'   : [[-1, 0], [0, -1]],
        '90'  : [[0,  1], [-1, 0]],
        '180' : [[1,  0], [0,  1]],
        '270' : [[0, -1], [1,  0]]
    },
    'line' : {
        '0'   : [[0,  1], [0, -1]],
        '90'  : [[1,  0], [-1, 0]],
        '180' : [[0,  1], [0, -1]],
        '270' : [[1,  0], [-1, 0]]
    },
    't' : {
        '0'   : [[-1, 0], [0,  1], [1,  0]],
        '90'  : [[0,  1], [1,  0], [0, -1]],
        '180' : [[1,  0], [0, -1], [-1, 0]],
        '270' : [[0, -1], [-1, 0], [0,  1]]
    },
    'cross' : {
        '0'   : [[0, -1], [-1, 0], [0,  1], [1,  0]],
        '90'   : [[0, -1], [-1, 0], [0,  1], [1,  0]],
        '180'   : [[0, -1], [-1, 0], [0,  1], [1,  0]],
        '270'   : [[0, -1], [-1, 0], [0,  1], [1,  0]]
    }
};

var mapDecoder = {

};

var gridPresets = {
    'gt'  : ['STPE', 'SPTE'],

    'lg'  : ['SPT2L3PT2LT3PE', 'S3PT2LT3PLPLPE', 'S3TP2TL3P2LTPE', 'ST2P2TP2L3PT2LE', 'S3PLPT2L3PT2LE', 'S3PLTL3TPL3PE', 'S2LT2P2TP2T2PTLE', 'SLT3PLPLPLPTPTE'],

    'md'  : ['S2LT5P2T5PLPLPLPL2PT2P2TPL3PE', 'PS3LTPL3PLPLPTPLPL3PLP2TELT6P', 'PSPTL2PL5PL2P2TPL2PELPL3PLPT3LT', 'PS5PLP2TLPL5PL3PEPTLTPL3PTLT', 'PS2LT5PLPT3P2T2L3PLPTP2TL3PE2T',
    'ST5PT3LT5P2LPT2LTP2L5PTLEP', 'PS2LT5PL2PLP2TPTLPL2PTLPL5PTEP', 'PS3LTP2T2PL3PTLT2P2L5PTEPLT4P', 'PS3LT5PL2PTPTLPLTP2L5PET2PL2P', 'PS2LT5PLPT3LTPL5PL2PTL2T2LTPE',
    '2PTLTPSPLPLPLPLPLPTLTPLE4P2LPT2P2T', 'TLT3PSPLP2T2PL5PLPE3PLPL3PTLTP', '6PS3LTPL3PLPLPLPLPL3PLPT2LETP', 'T3LTPS3PL3PTPL2PT2LT2PL5PT2LEP', '2PLTLTS2PLP2L2PLPLT2LTPL4PETPL4P',
    '6PS2LT5PL3PLPL2P2TPTLE6P', 'T3LTPS3PL2PT2LT2PL5PLPTLTPTLTPE', '3PTLTS2LTPL5PL5P2L2PEPLT2PTLT', '2PTLT2PSLPL2P2TP2T5PLPL3PL3PELT', '7PSTPTL2PL5PL2PEP2T2PLPT3LT',
    '4PT2PS3LTPL3PLP2T2PL2PT2LE6P', '2PTLT2PSTPL3PLP2T2PL2PLTLTPE2T3LTP', '3PTLTPSPLPLPLPLPLPTLTPL5PLT3PET', 'PT3LTPS3PL5PL3PTLT3PL2PT2PTLE', 'S4P2T2LT5PL5PLPET2LTPLT4LT',
    'ST3LT2L3P3L3PL2TPTLT3PEPLPTPTLT', 'SPT2LTLPL2P2LPL2PLTLT2PL5PE3PT2P', 'S3PLPL5PT3LTPL3PLPL3PEPT3LTP'],

    'sm'  : ['10PS8LT9PLT8PLP2T6LT2PL9P2L2PT2LT2PL3PL2PL2PT3LT2PEPT8P', 'SPTLT5PLPLPLPT2LPLPLPL5PTLTPL9PLPTLTPT3LTPLPLPL5PLPLPL5PLPLPL4P2TPLPT4L2TPEP',
    '2PS9PL4PLT3P2TLT7PTL2T2PT5PLT7P2T6PTLT6P2T8PT6LE11P', '6P2T3PSLT2P2LPT3PL7PTLT6P2T4PT2L3T4PL2PLPL4PL2PLPT4L2TLE20P', '12PS5LT3PL5PL3PL5PL3PT2LT2PL6PL2PT2PLPLPL2PT6PT2LE2P2T9PTL6P',
    'T6LT2PL6PL2PL6PL2PL3PS2LT3L8P2L2PT5P2L2P2LT4PL6PE2PTLT3PTL4PT3LT3P', 'PT7LTPL7PLPL7PLPS2PT2LTPL4PL2PLPL4PL2PLPL2PLPL2PLPLPTLPL2PTLTLT2PTLE13P',
    '10PT3LS5PL9PT8LT9PL9PL2PL2T2PTLT3PT3PL3P3L3PLPE7PTLT', 'T2LT3PL2TL2PL6PL2PSPTLT2PL4PLPL2PT4LTPL9PL4PT4LT3P2L9P2T9PT5LE',
    'TLS4LTLPL6PL2PLPTPT2PL2PL2PLT2PT2PL2PL3PT2PL9PL4PTLT2PT4LTPL9PE12P', '3P2T2P2L4P2L5PS2LTL2PTLT4PL2PLPL4PL2PLPLT3LT2PLP2L6PLPLT6LTPL9PE10P',
    '4PT2LT6PL2PL4PSLT2PL9PL2PT6LT2PL9PT8L2T8PL3PL3PELT10P', '7PTLT2PST3PLPLTL2T3PLP2L6PLP2L2P2L2PLP2L6PLP2L6PLPLT6LTPL9PL8PET', '14PT5PTS2PL2PT2PL3PL2PL2PL6PT2P2T5PL3PT7LT9PL2P2TPL3PL9PE',
    '3PT5LTSP2T5P2LPL6P2LPT2LT3P2L4PL3PLT4LT3PL8P2T8PL3PLTL3PE11P', '2PS9PL9PLPT2LT4PLPL2P2T3PLPL3PL3PLPL2P2T3PL2T2PL4P2T3PE7PT9PTL3P',
    '21PST6LTPL7PLPL3PTLTPLPT3LTPLPL7PLPL6P2TPT2PTL2PE2LT10P', '2PT4LT4PL4PL4PL4PL4PS4PL9PL9PL7PTLT6PTL9P2T9PE3P', '12PT5P2T2PL2T3P2L8P2LS7LTL9PL9PL4PT2LEPL4P2T3PL5PT4L',
    '13P2T8P2L2PTLTS2LTL2PLPL4PLP2TPL2PTLTPL2PLP2T2P2T2PEPT3LT21P2LP', '6PT2LT2PT3PL2PL6PL2PLPS2LTPL2PL4PLPL2PLPTLPLPL2PL2PTPLPLPE2T3LTPL3PLT4PL3PT5LT3P',
    'T8LTL8P2L2PT2LT2P2L2PS2PL2P2L5PL2P2LPTL2PL2P2L2PT2PL2P2L5PL2PET5LT13P', '10PTLT7PLPL7PLPS7PL9PT8LT9PL9PLPL3T2PEPL4PL2PTLT',
    '11PT11PS4LT4PL4PLPT2PL4PLPT2PL4PLPT2PLTL2PLP2LT2PL2PL9PL7P2TEP', '13PS3LT9PL3PTLT3PLPLPLPL3PLPTPLPL3PLPLPLPT3LT3PL9PT5LT9PE2P', '3PS5L2T2PL5PLT2PL3PLPL3PTPLPTPL9PL2PT6LT2PL9PL9PT5LE11P',
    '2PS9PL4PTLT2PL4PLPL2PT4LTPL2PL6PL2PL3PT2LT2PL3PL5PTPTPE7PL9PL4PL', 'TLT7PLPS7PL3PT4LTL3PL4PLT3LT4PL9PL7PELT4P2T5P3L16P',
    '2PT6LT2PL6PL2PS6PL5PTL2PL9PL3PT2LE2PLT2PL5PL3PL5PL3P2T3P2T4PT3LTP', '13PT5L2TSPL5P2L2PL5P2L2PL2PL2P2L2PLTLTPETL2PL6PT2LT12PL2PL10P', '4PT3LT5PL3PLPS3LT3PL9PL9PTE5PL6PT10P2T12PL12P',
    '10PS7PTPL4PL4PL4PT4PTLT2PL6PL2PT2LE3PL2PL4PTLT2PL2PTPL4PL4PT4LT4P', '11PS5LT3PL5PT3PL2PTLT4PL2PLPL4PL2PLPLPL2PT2LTPL9PE11PL9PLP', 'PS4LT9PL9PL9PTLT3PT5LT3PL9PL9PT2LT9PE14P',
    'S4LT9PL9PL5PT3LT5PL5PTLTP2T4PLPL2PL4PLPL2PL4PLPL2PT4LTPL9PE'],

    'nm'  : ['S8PL8PL4P2T11PL17PL3PT4PT6LTPL3PL4PL6PLPL2PT4P2T5P2TPL7PL3PL2PL2PL7PL6PL2PL3PT3PL2P2L2PL2PL7PLPTL3PL2PL7PLPT3P2T2PL7PL5PL2PET7LTL4PL2PL14PL2PL14PL2PL14P2TPL15PTLT18P',
    '19PS17PL4PT9LT2PL4PL9PL2P2T3PL9PL3PL2P2T9PL3PLP2T10PL3PTLT11PL17PL16P2T10PT5LT10P2T11PL4PL2PT3LT3PLP2L3PL2PL3PL4P2TL3PL2PLPEPL10PL2PLPLPL3P2T5PT2LTPLPL15PTLT2P',
    '40PS6LT2P2L13PL17PL17PL8PT8L2T3P2T2PL13P2L2PL12P2TL2PL3P2T7PLPL2PL6PT5LTPL2PL6PL7PL2PT6LT3PT3PL17PL17PE9P4T11P3LT2L2T16PT5P',
    '38PS9LT7PL9PL7PL9PL2P2T3PL2PT6LT2P2L3PL2PL8P2TL3PL2PL8PLP2T2PL2PT8LT2PL2PL14PL2PL14PL2PL14PL2PT14PL6P2TLTLT2PL2PL17PL5PL6PL4PL17PL17PE',
    '25PT6LT10PL6PL10PL6PL4PS5LT2PTLTPL13PLPLPL13PLPLPL10PL2PLPTLT13PL17PL8PT4LT3PL8PL4PL3PL4PT3PL4PL3PL2P2T4PL4PT3LT3PT2L2PL17PL17PL8PT4LT3PT8LT3PLE2P',
    '2PT12LT4PL12PL4PL12PL4PT2LS5PL3PL17PL4PT4PL3PL3PL4P2L2P2LPLPL3PL5PT2PL4PL3PL12PTL3PL5PL4P4T3PL6PL2P2T2PL3PL6PL6PL3PL6PL2PL3PL3PL5PTLT5PL3PL6P2L9P2T13P2L2PL13PL3PE19P',
    '3PS17PL8PLP2L5PL2PLP2T2PL8PL17PL5PT6LT4PL5PL6PL4PL2PL2PL6PL4PL2PL2PL2P2T2PL4PL5PL6PL4PL5PL6PL4PT5LT2PTL2PL7PT9PL7PT9PL7PL9PE7PL3PTL8PL3PT4PL42P',
    '19PS6LT2PL14PL3P2LT11PL3PLT12PL2PTL13PL2PT8PT5LT5PTLT3PL10P2TPL3PL9P2T2PL3PL3PL3PTLT3PL3PLP2LT3PL5PL3PL3P2T2PL5PL3PL7PL5PL3PT7LT5PL14PE2PL6PT7PL2PL14PLP2T14PTLT2P',
    '37PT2LS14PL6PT2LT7PL6PL2P2T6PT6LT3PL17PT3LT17PL4PT12PL7PT2LPL5PL7PTL8PL4PL3PL2TL5PL17PL17PL17PL8PT8LT8PL2T15PT6LE3P',
    '18PT6LT2PLT2PT3PL6PL4P4L2PT2LS3PL3P2LT11P2T17PL13PT3PL5P2T10PL5PLTLT7P2T4P2T2PLPT5LT5PL3PLPL11PL3PLPL8PT2PL3PLPL6P2T3PL3PLPL11PL3PLPT11LT3PL17PL11PT5PL7PT9PE',
    '8PT4LT12PL4PL12PL4PL2PT2PS6LT4PLP2T14PL17PL8PT8LT8PL11PL5PL4P2L5P2T4PL11P2LPL2PT6LT2PTLTL11PT2LT2PL17PL9PL7PL10PL6PL3P2TL11PL5P2T9PET18P',
    '21PS7PT3LT5PL7PL3PL5PL7PL3PL5PL7PL3PL5PT6LTL3PL12P2T3PL17PL17PL17PL3PT9LT3PL3PL9PT3LT3PL17PL17PL17PT15LT17PE18P', 
    'T4LT12PL4PL12PT2LSPL2PTPT3PT2LT5PL2PT5PL2PL5PL4PT3LT2PL3PLPL4PL6PLPLTLPL2PTPL6PLP2T2PL2PTPLPT4PLP2T2PL2PTPL6PLP3LPL4PL2PLPLPL3PLPL4PL2PLTLPL5PL4PL3PL2PL5PL4PL6PLT4LT4PL6P2L9PL6P2L9PL3PE2LTL9PL7PT9LT7P',
    'PT15LTPL15PLPSPT10LT2PL3PL10PL2PL3P2T9PL2PL4PL9PL2PL4PL9PL2PL3P2T9PL2PL3PL10PL2PL2P2T10PT2LTP2T15P2T16PL10PT2LT3PL10PL2P2T2P2T9PL3PL3PT9LT3PL17PE20P',
    'S8LT17PL2PT2LT4PT2PL2PTL2PL2PL9PLTLPTL2PL4PL6PL2PL2PL4PLPTPT2LT2PL2PL4PT3PL4P2T2PL4PLPTPL4PL3PL4PLPTPT4LT3PL4PT12PL4PL12PL16P2T2PT13LT3PL17PL17PT16LT17PE18P'],
};

var gridPipeTypes = {
    'S' : ['start'],
    'E' : ['end'],
    'T' : ['elbow', 'elbow', 'elbow', 'elbow', 'elbow', 'elbow', 't', 't', 'cross'],                          
    'L' : ['line', 'line', 'line', 'line', 'line', 't', 't', 't', 'line', 'cross'],                              
    'P' : ['empty', 'empty', 'empty', 'empty', 'empty', 'dead', 'dead', 'line', 'cross', 't', 'elbow']          
};

class Stack { 
    // Array is used to implement a Stack 
    constructor() {
        this.items = (arguments.length == 0) ? [] : [arguments[0]];
        this.length = this.items.length;
    } 

    push(element) {
        this.items.push(element); 
        this.length++;
    }

    pop() {
        if (this.isEmpty()) {
            return undefined;
        }

        this.length--;
        return this.items.pop();
    }

    top() {
        if (this.isEmpty()) {
            return undefined;
        }

        return this.items[this.items.length - 1];
    }

    isEmpty() {
        return this.items.length == 0;
    }

    reset() {
        this.items = [];
        this.length = 0;
    }

    values(key) {
        var arr = [];

        for (var i = 0; i < this.length; i++) 
            arr.push(this.items[i][key]);
        
        return arr;
    }
}